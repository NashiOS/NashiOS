name: Build

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        arch: [ i686 ]

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build build-essential bison flex libgmp3-dev libmpc-dev libmpfr-dev texinfo

      - name: Generate build
        run: cmake --preset ${{ matrix.arch }}

      - name: Toolchain cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/Binary/Toolchain/Cache/GithubActionsToolchain.tar.xz
          key: ${{ runner.os }}-toolchain-${{ matrix.arch }}-${{ hashFiles('Scripts/SetupToolchain.sh') }}

      - name: Build/Restore toolchain
        run: USE_CACHED=true cmake --build --preset ${{ matrix.arch }} --target toolchain

      - name: Build system
        run: cmake --build --preset ${{ matrix.arch }} --target all

      - name: Install system
        run: cmake --build --preset ${{ matrix.arch }} --target install
